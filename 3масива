<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: 20px;
        }

        .button-container {
            margin-bottom: 20px;
        }

        button {
            font-size: 16px;
            padding: 10px 20px;
            margin: 5px;
        }

        .game-container {
            display: grid;
            border: 2px solid #000;
        }

        .grid-cell {
            width: 30px;
            height: 30px;
            border: 1px solid #ccc;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
        }

        .black {
            background-color: #000;
            color: #fff;
        }

        .white {
            background-color: #fff;
            color: #000;
        }
    </style>
    <title>Интерактивная доска игры</title>
</head>
<body>
    <div class="button-container">
        <button id="button3x3">3 на 3</button>
        <button id="button9x9">9 на 9</button>
        <button id="button55x55">55 на 55</button>
    </div>
    <div class="game-container" id="gameContainer">
        <!-- Ячейки и фишки будут создаваться динамически с помощью JavaScript -->
    </div>
    <script>
        const gameContainer = document.getElementById("gameContainer");
        const button3x3 = document.getElementById("button3x3");
        const button9x9 = document.getElementById("button9x9");
        const button55x55 = document.getElementById("button55x55");
        let numRows = 55;
        let numCols = 55;
        let currentPlayer = "⚪";

        function createGameBoard() {
            gameContainer.innerHTML = "";
            gameContainer.style.gridTemplateColumns = `repeat(${numCols}, 30px)`;

            for (let row = 0; row < numRows; row++) {
                for (let col = 0; col < numCols; col++) {
                    const cell = document.createElement("div");
                    cell.classList.add("grid-cell");

                    if ((row === 0 && col === Math.floor(numCols / 2)) || (row === numRows - 1 && col === Math.floor(numCols / 2))) {
                        cell.textContent = currentPlayer;
                        cell.classList.add(currentPlayer === "⚪" ? "white" : "black");
                    }

                    cell.addEventListener("click", () => {
                        if (!cell.textContent) {
                            const adjacentCells = gameContainer.querySelectorAll(".grid-cell");
                            const cellIndex = Array.from(adjacentCells).indexOf(cell);

                            const topCell = adjacentCells[cellIndex - numCols];
                            const bottomCell = adjacentCells[cellIndex + numCols];

                            if ((topCell && topCell.textContent === currentPlayer) || (bottomCell && bottomCell.textContent === currentPlayer)) {
                                cell.textContent = currentPlayer;
                                cell.classList.add(currentPlayer === "⚪" ? "white" : "black");
                                currentPlayer = (currentPlayer === "⚪") ? "⚫" : "⚪";
                            }
                        }
                    });

                    gameContainer.appendChild(cell);
                }
            }
        }

        button3x3.addEventListener("click", () => {
            numRows = 3;
            numCols = 3;
            createGameBoard();
        });

        button9x9.addEventListener("click", () => {
            numRows = 9;
            numCols = 9;
            createGameBoard();
        });

        button55x55.addEventListener("click", () => {
            numRows = 55;
            numCols = 55;
            createGameBoard();
        });

        createGameBoard();
    </script>
</body>
</html>